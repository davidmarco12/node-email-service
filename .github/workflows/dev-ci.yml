name: Email Service Github Action CI Develop

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - feature
      - main

env:
  DB_USER: ${{secrets.DB_USER}}
  DB_PASSWORD: ${{secrets.DB_PASSWORD}}
  DB_NAME: ${{secrets.DB_NAME}}
  DB_HOST: ${{secrets.DB_HOST}}
  DB_PORT: ${{secrets.DB_PORT}}
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  SENDGRIDSERVICE: ${{secrets.SENDGRIDSERVICE}}
  MAILGUNSERVICE: ${{secrets.MAILGUNSERVICE}}
  MAILGUNDOMAIN: ${{secrets.MAILGUNDOMAIN}}
  SECRET_JWT: ${{secrets.SECRET_JWT}}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present

  test:
    name: Run tests
    needs: build

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - run: |
          DB_USER=$DB_USER
          DB_PASSWORD=$DB_PASSWORD
          DB_NAME=$DB_NAME
          DB_HOST=$DB_HOST
          DB_PORT=$DB_PORT
          SENDGRIDSERVICE=$SENDGRIDSERVICE
          MAILGUNSERVICE=$MAILGUNSERVICE
          MAILGUNDOMAIN=$MAILGUNDOMAIN
          SECRET_JWT=$SECRET_JWT
          npm ci
          npm run test
  deploy:
    name: Deploy to FLY.IO
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only

        

